---
title:  "Swift (八) 类和结构体"
date:   2016-03-12 10:30:00 +8:00
categories: Swift
tags: [Swift]
---
## 定义语法

```swift
class SomeClass { // 通过class定义类

}
struct SomeStructure { // 通过struct定义结构体

}

struct Resolution {
    var width = 0
    var height = 0
}
class VideoMode {
    var resolution = Resolution()
    var interlaced =false 
    var frameRate = 0.0
    var name: String? // 可选类型被初始化为nil
}
```

## 类和结构体实例

```swift
let someResolution = Resolution() // 构造器语法
let someVideoMode - VideoMode()
```

## 属性访问

```swift
print("The width of someResolution is \(someResolution.width)")
print("the width of someVideoMode is \(someVideoMode.resolution.width)")

someVideoMode.resolution.width = 1280 // 可以使用点语法为变量属性赋值
print ("The width of someVideoMode is \(someVideoMode.resolution.width)")

// 结构体类型的成员逐一构造器
let vga = Resolution(width: 640, height: 480) // swift自动生成

// 结构体和枚举是值类型
let hd = Resolution(width: 1920, height: 1080)
var cinema = hd // 因为hd是结构体类型,赋值时会拷贝实例,而不是引用实例

cinema.width= 2048
print("cinema is now \(cinema.width) pixels wide")
print("hd is still \(hd.width) pixels wide")

enum CompassPoint {
    case North, South, East, West
}
var currentdirection = CompassPoint.West
let rememberedDirection = currentDirection // 与结构体相同,枚举赋值时也会拷贝实例,而不是引用实例
currentDirection = .East
if rememberedDirection == .West {
    print("the remembered direction is still .West")
}
```

## 类是引用类型

```swift
let tenEighty = VideoMode()
tenEighty.resolution = hd
tenEighty.interlaced = true
tenEighty.name = "1080i"
tenEighty.frameRate = 25.0

let alsoTenEighty = tenEighty // alsoTenEighty引用了tenEighty,两者是同一个类实例
alsoTenEighty.frameRate = 30.0
print("The framRate property of tenEighty is now \(tenEighty.frameRate")
```

## 恒等运算符

```swift
if tenEighty === alsoTenEighty { // === 用于判断两个类类型的常量或者变量是否引用同一个类实例, !== 用于判断两个类类型的常量或者变量是否引用不同的类实例
    print("tenEighty and alsoTenEighty refer to the same Resolution instance.")
}
```
